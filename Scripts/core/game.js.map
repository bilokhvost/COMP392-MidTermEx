{"version":3,"sources":["core/game.ts"],"names":[],"mappings":"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","file":"core/game.js","sourcesContent":["/*game.ts\nKateryna Bilokhvost\nLast Modified by: Kateryna Bilokhvost\nDate last Modified: March 02, 2016\nThis is a program to display the Tapered Tower. \nThe following controls are available: change rotation of the bottom cube\nRevision History:\n    Commit 1: Created the project file\n    Commit 2: Added the light, axes helper and plane to the scene\n   \n\n*/\n/// <reference path=\"_reference.ts\"/>\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.WebGLRenderer;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Material = THREE.Material;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport AmbientLight = THREE.AmbientLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport CScreen = config.Screen;\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\n// setup an IIFE structure (Immediately Invoked Function Expression)\nvar game = (() => {\n\n    // declare game objects\n    var scene: Scene = new Scene();\n    var renderer: Renderer;\n    var camera: PerspectiveCamera;\n    var ambientLight: AmbientLight;\n    var spotLight: SpotLight;\n    var control: Control;\n    var gui: GUI;\n    var stats: Stats;\n    var axes: AxisHelper;\n    var ground: Mesh;\n    var groundGeometry: PlaneGeometry;\n    var groundMaterial: LambertMaterial;\n    var cubeOne: Mesh;\n    var cubeOneGeometry: CubeGeometry;\n    var cubeOneMaterial: LambertMaterial;\n    var cubeTwo: Mesh;\n    var cubeTwoGeometry: CubeGeometry;\n    var cubeTwoMaterial: LambertMaterial;\n    var cubeThree: Mesh;\n    var cubeThreeGeometry: CubeGeometry;\n    var cubeThreeMaterial: LambertMaterial;\n    var cubeFour: Mesh;\n    var cubeFourGeometry: CubeGeometry;\n    var cubeFourMaterial: LambertMaterial;\n    var cubeFive: Mesh;\n    var cubeFiveGeometry: CubeGeometry;\n    var cubeFiveMaterial: LambertMaterial;\n\n\n    function init() {\n        // Instantiate a new Scene object\n        //scene = new Scene();\n        \n        setupRenderer(); // setup the default renderer\n\t\n        setupCamera(); // setup the camera\n        \n        //adding amber light to the scene\n        ambientLight = new AmbientLight(0x292929);\n        scene.add(ambientLight);\n        console.log(\"Added an Ambient Light to Scene\");\n        \n        //adding spot light to the scene\n        spotLight = new SpotLight(0xFFFFFF);\n        spotLight.position.set(-40, 60, -20);\n        spotLight.castShadow = true;\n        scene.add(spotLight);\n        console.log(\"added pointLight to the scene\");\n        \n        //adding AxisHelper\n        axes = new AxisHelper(10);\n        scene.add(axes);\n        console.log(\"Added Axis Helper to scene...\");\n        \n        // add plane\n        groundGeometry = new PlaneGeometry(26, 26);\n        groundMaterial = new LambertMaterial({ color: 0x204c39 });\n        ground = new Mesh(groundGeometry, groundMaterial);\n        ground.rotation.x = -0.5 * Math.PI;\n        scene.add(ground);\n        \n        //adddind first cube\n        cubeOneMaterial = new LambertMaterial({ color: Math.random() * 0xffffff });\n        cubeOneGeometry = new CubeGeometry(5, 5, 5);\n        cubeOne = new gameObject(cubeOneGeometry, cubeOneMaterial, 0, 2.5, 0);\n        scene.add(cubeOne);\n        \n         //adddind second cube\n        cubeTwoGeometry = new CubeGeometry(4, 4, 4);\n        cubeTwoMaterial = new LambertMaterial({ color: Math.random() * 0xffffff });        \n        cubeTwo = new gameObject(cubeTwoGeometry, cubeTwoMaterial, 0, 7, 0);\n        scene.add(cubeTwo);\n            \n        \n \n        // add controls\n        gui = new GUI();\n        control = new Control(0,0,0,0,0);\n        addControl(control);\n\n        // Add framerate stats\n        addStatsObject();\n        console.log(\"Added Stats to scene...\");\n\n        document.body.appendChild(renderer.domElement);\n        gameLoop(); // render the scene\t\n\n    }\n\n    function addControl(controlObject: Control): void {\n        gui.add(controlObject, 'rotationSpeedOne', -0.5, 0.5);\n        gui.add(controlObject, 'rotationSpeedTwo', -0.5, 0.5);\n    }\n\n    function addStatsObject() {\n        stats = new Stats();\n        stats.setMode(0);\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.top = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    // Setup main game loop\n    function gameLoop(): void {\n        stats.update();\n        \n        cubeOne.rotation.y += control.rotationSpeedOne;\n        cubeTwo.rotation.y += control.rotationSpeedTwo;\n     //   cubeOne.rotation.y += control.rotationSpeedOne;\n       // cubeOne.rotation.y += control.rotationSpeedOne;\n       // cubeOne.rotation.y += control.rotationSpeedOne;\n        \n        // render using requestAnimationFrame\n        requestAnimationFrame(gameLoop);\n\t\n        // render the scene\n        renderer.render(scene, camera);\n    }\n\n    // Setup default renderer\n    function setupRenderer(): void {\n        renderer = new Renderer();\n        renderer.setClearColor(0x404040, 1.0);\n        renderer.setSize(CScreen.WIDTH, CScreen.HEIGHT);\n        //renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        console.log(\"Finished setting up Renderer...\");\n    }\n\n    // Setup main camera for the scene\n    function setupCamera(): void {\n        camera = new PerspectiveCamera(35, config.Screen.RATIO, 0.1, 100);\n        camera.position.x = 15.3;\n        camera.position.y = 18.5;\n        camera.position.z = -50;\n        camera.rotation.set(-1.10305, 0.49742, -0.1396);\n        camera.lookAt(new Vector3(0, 0, 0));\n        console.log(\"Finished setting up Camera...\");\n    }\n\n    window.onload = init;\n\n    return {\n        scene: scene\n    }\n\n})();\n\n"],"sourceRoot":"/source/"}